{"version":3,"file":"component---src-templates-paginated-posts-js-64be30a3ffd3a0f86916.js","mappings":"8JAIsC,IAEhCA,EAAc,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,KAsKjB,OAtKiBC,EAAAA,EAAAA,GAAAJ,EAAAC,GAAAD,EAAAK,UAClBC,OAAA,WACE,MAAM,KAAEC,GAASC,KAAKC,OACdC,MAAOC,EAAK,SAAEC,GAAaL,EAAKM,QAClC,YAAEC,EAAW,YAAEC,EAAW,gBAAEC,EAAe,UAAEC,GAAcL,EAE3DM,EACJF,GAAmC,IAAhBF,EAAoB,UAASA,EAAc,GAAM,IAChEK,EAAUJ,EACZ,SAASD,EAAc,IACvB,SAASA,IAEb,OACEM,EAAAA,cAACC,EAAAA,EAAM,KAEJV,EAAMW,IAAIC,IAAA,IAAC,KAAEC,GAAMD,EAAA,OAClBH,EAAAA,cAAA,OACEK,UAAU,2GACVC,IAAKF,EAAKG,OAAOC,MAEmB,OAAnCJ,EAAKK,YAAYC,eAChBV,EAAAA,cAAA,OAAKK,UAAU,uBACbL,EAAAA,cAAA,OACEK,UAAU,mDACVM,IACEP,EAAKK,YAAYC,cAAcE,gBAC5BC,gBAAgBC,OAAOC,SAASJ,IAErCK,OACEZ,EAAKK,YAAYC,cAAcE,gBAC5BC,gBAAgBC,OAAOG,QAAQD,UAK1ChB,EAAAA,cAAA,OAAKK,UAAU,0BACbL,EAAAA,cAAA,WACEA,EAAAA,cAAA,OAAKK,UAAU,qCACbL,EAAAA,cAAA,UACEA,EAAAA,cAACkB,EAAAA,KAAI,CACHb,UAAU,8EACVc,GAAI,IAAIf,EAAKG,OAAOC,QAEnBJ,EAAKK,YAAYW,QAIrBC,KAAKC,MAAQ,IAAID,KAAKjB,EAAKG,OAAOgB,MAAQ,QACzCvB,EAAAA,cAACwB,EAAAA,EAAM,CAACnB,UAAU,uBAGtBL,EAAAA,cAAA,KAAGK,UAAU,yDACVD,EAAKK,YAAYgB,cAGtBzB,EAAAA,cAAA,OAAKK,UAAU,0CACbL,EAAAA,cAAA,QAAMK,UAAU,uCACbD,EAAKG,OAAOgB,MAEfvB,EAAAA,cAAC0B,EAAAA,EAAOC,OAAM,CACZtB,UAAU,0IACVuB,WAAW,QACXC,SAAU,CAAEC,MAAO,KACnBC,QAAQ,OACRC,QAAQ,OACRC,SAAU,CACRC,MAAO,CAAEC,WAAY,4BAA6BL,MAAO,OAE3DM,QAASA,KAAMC,EAAAA,EAAAA,UAAS,IAAIjC,EAAKG,OAAOC,SAExCR,EAAAA,cAAC0B,EAAAA,EAAOY,KAAI,CACVjC,UAAU,kBACV4B,SAAU,CACRC,MAAO,CAAEK,MAAO,gCAEnB,aAGDvC,EAAAA,cAAC0B,EAAAA,EAAOc,IAAG,CACTC,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLxC,UAAU,qBACV4B,SAAU,CACRa,KAAM,CAAEC,EAAG,GACXb,MAAO,CAAEa,EAAG,IAEdC,WAAY,CACVC,KAAM,SACNC,UAAW,MAGblD,EAAAA,cAAA,QACEmD,EAAE,6DACFC,OAAO,QACPC,YAAY,MACZC,cAAc,QACdC,eAAe,iBAQ7BvD,EAAAA,cAAA,OAAKK,UAAU,8DAEbL,EAAAA,cAACkB,EAAAA,KAAI,CACHb,UAAU,0FACVc,GAAIrB,EACJ,aAAW,YAEXE,EAAAA,cAAA,OACE0C,MAAM,IACNC,OAAO,KACPE,KAAK,OACLJ,MAAM,8BAENzC,EAAAA,cAAA,QACEmD,EAAE,eACFC,OAAO,OACPE,cAAc,QACdC,eAAe,YAIrBvD,EAAAA,cAAA,OAAKK,UAAU,sFACZmD,MAAMC,KAAK,CAAEC,OAAQ7D,IAAaK,IAAI,CAACyD,EAAGC,IACzC5D,EAAAA,cAACkB,EAAAA,KAAI,CACHC,GAAU,IAANyC,EAAU,IAAM,SAASA,EAAI,IACjCvD,UAAW,uGACTX,IAAgBkE,EAAI,EAChB,6BACA,cAENtD,IAAKsD,GAEJA,EAAI,KAKX5D,EAAAA,cAACkB,EAAAA,KAAI,CACHb,UAAU,kHACV,aAAW,OACXc,GAAIpB,GAEJC,EAAAA,cAAA,OACE0C,MAAM,IACNC,OAAO,KACPE,KAAK,OACLJ,MAAM,8BAENzC,EAAAA,cAAA,QACEmD,EAAE,eACFC,OAAO,OACPE,cAAc,QACdC,eAAe,aAO7B,EAAC3E,CAAA,CAtKiB,CAASiF,EAAAA,WAuM7B,W,oCChMA,IAVe1D,IAAA,IAAC,UAAEE,EAAS,SAAEyD,GAAU3D,EAAA,OACrCH,EAAAA,cAAA,QACEK,UAAW,qDACTA,GAAa,eAGdyD,GAAY,O","sources":["webpack:///./src/templates/paginated-posts.js","webpack:///./src/components/NewTag.js"],"sourcesContent":["import { graphql, Link, navigate } from \"gatsby\";\nimport React, { Component } from \"react\";\nimport NewTag from \"../components/NewTag\";\nimport Layout from \"../components/Layout\";\nimport { motion } from \"motion/react\";\n\nclass PaginatedPosts extends Component {\n  render() {\n    const { data } = this.props;\n    const { edges: posts, pageInfo } = data.allMdx;\n    const { currentPage, hasNextPage, hasPreviousPage, pageCount } = pageInfo;\n\n    const previousUri =\n      hasPreviousPage && currentPage !== 2 ? `/page/${currentPage - 1}` : \"/\";\n    const nextUri = hasNextPage\n      ? `/page/${currentPage + 1}`\n      : `/page/${currentPage}`;\n\n    return (\n      <Layout>\n        {/* Paginated Posts */}\n        {posts.map(({ node }) => (\n          <div\n            className=\"md:flex w-72 x:w-84 sm:w-100 md:w-120 mx-auto mt-8 rounded-lg bg-gray-lighter opacity-85 overflow-hidden\"\n            key={node.fields.slug}\n          >\n            {node.frontmatter.featuredImage !== null && (\n              <div className=\"md:shrink-0 md:w-30\">\n                <img\n                  className=\"w-full h-40 md:h-full object-cover object-center\"\n                  src={\n                    node.frontmatter.featuredImage.childImageSharp\n                      .gatsbyImageData.images.fallback.src\n                  }\n                  srcSet={\n                    node.frontmatter.featuredImage.childImageSharp\n                      .gatsbyImageData.images.sources.srcSet\n                  }\n                />\n              </div>\n            )}\n            <div className=\"w-full p-4 py-6 md:p-6\">\n              <div>\n                <div className=\"flex justify-between items-center\">\n                  <h5>\n                    <Link\n                      className=\"no-underline font-semibold text-purple-dark text-xl hover:text-purple-light\"\n                      to={`/${node.fields.slug}`}\n                    >\n                      {node.frontmatter.title}\n                    </Link>\n                  </h5>\n                  {/* NewTag should show up when post is created in 15 days. */}\n                  {Date.now() - new Date(node.fields.date) < 1296000000 && (\n                    <NewTag className=\"px-2 py-1 text-xs\" />\n                  )}\n                </div>\n                <p className=\"mt-2 text-gray-darkest text-sm x:text-base md:text-sm\">\n                  {node.frontmatter.description}\n                </p>\n              </div>\n              <div className=\"flex justify-between items-center mt-6\">\n                <span className=\"text-purple-light font-bold text-sm\">\n                  {node.fields.date}\n                </span>\n                <motion.button\n                  className=\"flex items-center gap-1 rounded-sm text-gray-lighter text-xs x:text-sm px-2 py-1 text-center no-underline bg-purple-dark cursor-pointer\"\n                  whileHover=\"hover\"\n                  whileTap={{ scale: 0.95 }}\n                  initial=\"rest\"\n                  animate=\"rest\"\n                  variants={{\n                    hover: { background: \"var(--color-purple-light)\", scale: 1.02},\n                  }}\n                  onClick={() => navigate(`/${node.fields.slug}`)}\n                >\n                  <motion.span\n                    className=\"text-gray-light\"\n                    variants={{\n                      hover: { color: \"var(--color-gray-lightest)\" },\n                    }}\n                  >\n                    Read More\n                  </motion.span>\n                  <motion.svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"20\"\n                    height=\"20\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    className=\"text-gray-lightest\"\n                    variants={{\n                      rest: { x: 0 },\n                      hover: { x: 6 },\n                    }}\n                    transition={{\n                      type: \"spring\",\n                      stiffness: 300,\n                    }}\n                  >\n                    <path\n                      d=\"M9.00005 6C9.00005 6 15 10.4189 15 12C15 13.5812 9 18 9 18\"\n                      stroke=\"white\"\n                      strokeWidth=\"1.5\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                    />\n                  </motion.svg>\n                </motion.button>\n              </div>\n            </div>\n          </div>\n        ))}\n        <div className=\"flex justify-center w-72 x:w-84 sm:w-100 h-8 mt-12 mx-auto\">\n          {/* Previous Button */}\n          <Link\n            className=\"inline-flex justify-center items-center w-8 h-8 rounded-full bg-gray-lighter opacity-85\"\n            to={previousUri}\n            aria-label=\"Previous\"\n          >\n            <svg\n              width=\"6\"\n              height=\"10\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M5 1L1 5l4 4\"\n                stroke=\"#000\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              />\n            </svg>\n          </Link>\n          <div className=\"flex justify-center items-center mx-4 px-4 rounded-full bg-gray-lighter opacity-85\">\n            {Array.from({ length: pageCount }).map((_, i) => (\n              <Link\n                to={i === 0 ? \"/\" : `/page/${i + 1}`}\n                className={`inline-flex w-6 h-6 mr-2 text-sm x:text-base justify-center items-center no-underline rounded-full ${\n                  currentPage === i + 1\n                    ? \"bg-purple-light text-white\"\n                    : \"text-black\"\n                }`}\n                key={i}\n              >\n                {i + 1}\n              </Link>\n            ))}\n          </div>\n          {/* Next Button */}\n          <Link\n            className=\"inline-flex justify-center items-center w-8 h-8 rounded-full bg-gray-lighter opacity-85 text-black no-underline\"\n            aria-label=\"Next\"\n            to={nextUri}\n          >\n            <svg\n              width=\"6\"\n              height=\"10\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M1 9l4-4-4-4\"\n                stroke=\"#000\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              />\n            </svg>\n          </Link>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport const PaginatedPostsQuery = graphql`\n  query paginatedPostsQuery($skip: Int!, $limit: Int!) {\n    allMdx(sort: { fields: { date: DESC } }, limit: $limit, skip: $skip) {\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          frontmatter {\n            title\n            description\n            featuredImage {\n              childImageSharp {\n                gatsbyImageData(placeholder: NONE, layout: FULL_WIDTH)\n              }\n            }\n          }\n        }\n      }\n      pageInfo {\n        currentPage\n        hasNextPage\n        hasPreviousPage\n        pageCount\n      }\n    }\n  }\n`;\n\nexport default PaginatedPosts;\n","/* eslint-disable react/prop-types */\nimport React from \"react\";\n\nconst NewTag = ({ className, children }) => (\n  <span\n    className={`bg-pink-dark animate-breath text-white rounded-md ${\n      className || \"px-2 py-1\"\n    }`}\n  >\n    {children || \"NEW\"}\n  </span>\n);\n\nexport default NewTag;\n"],"names":["PaginatedPosts","_Component","apply","arguments","_inheritsLoose","prototype","render","data","this","props","edges","posts","pageInfo","allMdx","currentPage","hasNextPage","hasPreviousPage","pageCount","previousUri","nextUri","React","Layout","map","_ref","node","className","key","fields","slug","frontmatter","featuredImage","src","childImageSharp","gatsbyImageData","images","fallback","srcSet","sources","Link","to","title","Date","now","date","NewTag","description","motion","button","whileHover","whileTap","scale","initial","animate","variants","hover","background","onClick","navigate","span","color","svg","xmlns","width","height","viewBox","fill","rest","x","transition","type","stiffness","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Array","from","length","_","i","Component","children"],"sourceRoot":""}