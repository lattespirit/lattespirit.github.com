{"version":3,"sources":["webpack:///./src/templates/paginated-posts.js"],"names":["PaginatedPosts","render","posts","this","props","data","allMdx","edges","pageInfo","currentPage","hasNextPage","hasPreviousPage","pageCount","previousUri","nextUri","map","node","className","key","fields","slug","frontmatter","thumbnail","style","backgroundImage","to","title","description","date","width","height","fill","xmlns","d","stroke","strokeLinecap","strokeLinejoin","Array","from","length","_","i","Component","PaginatedPostsQuery"],"mappings":"wQAIqBA,E,gLACnBC,OAAA,WACE,IAAMC,EAAQC,KAAKC,MAAMC,KAAKC,OAAOC,MAD9B,EAOHJ,KAAKC,MAAMC,KAAKC,OAAOE,SAJzBC,EAHK,EAGLA,YACAC,EAJK,EAILA,YACAC,EALK,EAKLA,gBACAC,EANK,EAMLA,UAGIC,EACJF,GAAmC,IAAhBF,EAAoB,UAAYA,EAAc,GAAK,IAClEK,EAAUJ,EACZ,UAAYD,EAAc,GAC1B,SAAWA,EAEf,OACE,kBAAC,IAAD,KAEGP,EAAMa,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACZ,OACE,yBACEC,UAAU,2GACVC,IAAKF,EAAKG,OAAOC,MAEhBJ,EAAKK,YAAYC,WAChB,yBACEL,UAAU,8CACVM,MAAO,CACLC,gBAAgB,QAASR,EAAKK,YAAYC,UAA3B,QAIrB,yBAAKL,UAAU,qBACb,6BACE,kBAAC,IAAD,CACEA,UAAU,gDACVQ,GAAI,IAAMT,EAAKG,OAAOC,MAErBJ,EAAKK,YAAYK,OAEpB,uBAAGT,UAAU,yDACVD,EAAKK,YAAYM,cAGtB,yBAAKV,UAAU,0CACb,0BAAMA,UAAU,6BACbD,EAAKG,OAAOS,MAEf,kBAAC,IAAD,CACEX,UAAU,8GACVQ,GAAI,IAAMT,EAAKG,OAAOC,MAFxB,mBAWV,yBAAKH,UAAU,8DAEb,kBAAC,IAAD,CACEA,UAAU,gGACVQ,GAAIZ,GAEJ,yBACEgB,MAAM,IACNC,OAAO,KACPC,KAAK,OACLC,MAAM,8BAEN,0BACEC,EAAE,eACFC,OAAO,OACPC,cAAc,QACdC,eAAe,YAIrB,yBAAKnB,UAAU,sFACZoB,MAAMC,KAAK,CAAEC,OAAQ3B,IAAaG,KAAI,SAACyB,EAAGC,GACzC,OAAOhC,IAAgBgC,EAAI,EACzB,kBAAC,IAAD,CACEvB,IAAKuB,EACLhB,GAAU,IAANgB,EAAU,IAAM,UAAYA,EAAI,GACpCxB,UAAU,uIAETwB,EAAI,GAGP,kBAAC,IAAD,CACEvB,IAAKuB,EACLhB,GAAU,IAANgB,EAAU,IAAM,UAAYA,EAAI,GACpCxB,UAAU,0GAETwB,EAAI,OAMb,kBAAC,IAAD,CACExB,UAAU,wHACVQ,GAAIX,GAEJ,yBACEe,MAAM,IACNC,OAAO,KACPC,KAAK,OACLC,MAAM,8BAEN,0BACEC,EAAE,eACFC,OAAO,OACPC,cAAc,QACdC,eAAe,e,GApHaM,aA8H/BC,EAAmB","file":"component---src-templates-paginated-posts-js-e98896e2b064aaae53e0.js","sourcesContent":["import { graphql, Link } from \"gatsby\";\nimport React, { Component } from \"react\";\nimport Layout from \"../components/Layout\";\n\nexport default class PaginatedPosts extends Component {\n  render() {\n    const posts = this.props.data.allMdx.edges;\n    const {\n      currentPage,\n      hasNextPage,\n      hasPreviousPage,\n      pageCount\n    } = this.props.data.allMdx.pageInfo;\n\n    const previousUri =\n      hasPreviousPage && currentPage !== 2 ? \"/page/\" + (currentPage - 1) : \"/\";\n    const nextUri = hasNextPage\n      ? \"/page/\" + (currentPage + 1)\n      : \"/page/\" + currentPage;\n\n    return (\n      <Layout>\n        {/* Paginated Posts */}\n        {posts.map(({ node }) => {\n          return (\n            <div\n              className=\"md:flex w-72 x:w-84 sm:w-100 md:w-120 mx-auto mt-8 rounded-lg bg-gray-lighter opacity-85 overflow-hidden\"\n              key={node.fields.slug}\n            >\n              {node.frontmatter.thumbnail && (\n                <div\n                  className=\"flex-none min-w-1/4 h-40 md:h-auto bg-cover\"\n                  style={{\n                    backgroundImage: `url(\"${node.frontmatter.thumbnail}\")`\n                  }}\n                ></div>\n              )}\n              <div className=\"w-full p-4 md:p-6\">\n                <div>\n                  <Link\n                    className=\"no-underline font-semibold text-black text-xl\"\n                    to={\"/\" + node.fields.slug}\n                  >\n                    {node.frontmatter.title}\n                  </Link>\n                  <p className=\"mt-2 text-gray-darkest text-sm x:text-base md:text-sm\">\n                    {node.frontmatter.description}\n                  </p>\n                </div>\n                <div className=\"flex justify-between items-center mt-6\">\n                  <span className=\"text-gray-darkest text-sm\">\n                    {node.fields.date}\n                  </span>\n                  <Link\n                    className=\"inline-block bg-purple-light rounded text-gray-lighter text-xs x:text-sm px-2 py-1 text-center no-underline\"\n                    to={\"/\" + node.fields.slug}\n                  >\n                    Read More\n                  </Link>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n        <div className=\"flex justify-center w-72 x:w-84 sm:w-100 h-8 mt-12 mx-auto\">\n          {/* Previous Button */}\n          <Link\n            className=\"inline-block flex justify-center items-center w-8 h-8 rounded-full bg-gray-lighter opacity-85\"\n            to={previousUri}\n          >\n            <svg\n              width=\"6\"\n              height=\"10\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M5 1L1 5l4 4\"\n                stroke=\"#000\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              />\n            </svg>\n          </Link>\n          <div className=\"flex justify-center items-center mx-4 px-4 rounded-full bg-gray-lighter opacity-85\">\n            {Array.from({ length: pageCount }).map((_, i) => {\n              return currentPage === i + 1 ? (\n                <Link\n                  key={i}\n                  to={i === 0 ? \"/\" : \"/page/\" + (i + 1)}\n                  className=\"flex inline-block w-6 h-6 mr-2 text-sm x:text-base justify-center items-center bg-purple-light text-white rounded-full no-underline\"\n                >\n                  {i + 1}\n                </Link>\n              ) : (\n                <Link\n                  key={i}\n                  to={i === 0 ? \"/\" : \"/page/\" + (i + 1)}\n                  className=\"flex inline-block w-6 h-6 mr-2 text-sm x:text-base justify-center items-center text-black no-underline\"\n                >\n                  {i + 1}\n                </Link>\n              );\n            })}\n          </div>\n          {/* Next Button */}\n          <Link\n            className=\"inline-block flex justify-center items-center w-8 h-8 rounded-full bg-gray-lighter opacity-85 text-black no-underline\"\n            to={nextUri}\n          >\n            <svg\n              width=\"6\"\n              height=\"10\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M1 9l4-4-4-4\"\n                stroke=\"#000\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              />\n            </svg>\n          </Link>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport const PaginatedPostsQuery = graphql`\n  query paginatedPostsQuery($skip: Int!, $limit: Int!) {\n    allMdx(\n      sort: { fields: fields___date, order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          frontmatter {\n            title\n            description\n            thumbnail\n          }\n        }\n      }\n      pageInfo {\n        currentPage\n        hasNextPage\n        hasPreviousPage\n        pageCount\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}