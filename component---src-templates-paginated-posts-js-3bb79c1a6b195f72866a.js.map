{"version":3,"file":"component---src-templates-paginated-posts-js-3bb79c1a6b195f72866a.js","mappings":"uIAcA,EAVe,SAAC,GAAD,IAAGA,EAAH,EAAGA,UAAWC,EAAd,EAAcA,SAAd,OACb,wBACED,UAAcE,uDACZF,GAAa,cAGdC,GAAY,S,kFCJXE,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,KAkHH,OAlHGA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UACJC,OAAA,WACE,IACA,EADiBC,KAAKC,MAAdC,KACgCC,OAAzBC,EAAf,EAAQC,MAAcC,EAAtB,EAAsBA,SAEpBC,EACED,EADFC,YAAaC,EACXF,EADWE,YAAaC,EACxBH,EADwBG,gBAAiBC,EACzCJ,EADyCI,UAGvCC,EAAcF,GAAmC,IAAhBF,EAAnB,UAAgDA,EAAc,GAAM,IAClFK,EAAUJ,EAAW,UACdD,EAAc,GADA,SAEdA,EAEb,OACE,gBAAC,IAAD,KAEGH,EAAMS,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACT,uBACEnB,UAAU,2GACVoB,IAAKD,EAAKE,OAAOC,MAEjB,uBAAKtB,UAAU,0BACb,2BACE,uBAAKA,UAAU,qCACb,0BACE,gBAAC,EAAAuB,KAAD,CACEvB,UAAU,gDACVwB,GAAE,IAAML,EAAKE,OAAOC,MAEnBH,EAAKM,YAAYC,QAGrBC,KAAKC,MAAQ,IAAID,KAAKR,EAAKE,OAAOQ,MAC7B,QACF,gBAAC,IAAD,CAAQ7B,UAAU,uBAGxB,qBAAGA,UAAU,yDACVmB,EAAKM,YAAYK,cAGtB,uBAAK9B,UAAU,0CACb,wBAAMA,UAAU,uCACbmB,EAAKE,OAAOQ,MAEf,gBAAC,EAAAN,KAAD,CACEvB,UAAU,8GACVwB,GAAE,IAAML,EAAKE,OAAOC,MAFtB,mBAUR,uBAAKtB,UAAU,8DAEb,gBAAC,EAAAuB,KAAD,CACEvB,UAAU,0FACVwB,GAAIR,EACJ,aAAW,YAEX,uBACEe,MAAM,IACNC,OAAO,KACPC,KAAK,OACLC,MAAM,8BAEN,wBACEC,EAAE,eACFC,OAAO,OACPC,cAAc,QACdC,eAAe,YAIrB,uBAAKtC,UAAU,sFACZuC,MAAMC,KAAK,CAAEC,OAAQ1B,IAAaG,KAAI,SAACwB,EAAGC,GAAJ,OACrC,gBAAC,EAAApB,KAAD,CACEC,GAAU,IAANmB,EAAU,IAAV,UAAyBA,EAAI,GACjC3C,UAAS,uGACPY,IAAgB+B,EAAI,EAChB,6BACA,cAENvB,IAAKuB,GAEJA,EAAI,OAKX,gBAAC,EAAApB,KAAD,CACEvB,UAAU,kHACV,aAAW,OACXwB,GAAIP,GAEJ,uBACEc,MAAM,IACNC,OAAO,KACPC,KAAK,OACLC,MAAM,8BAEN,wBACEC,EAAE,eACFC,OAAO,OACPC,cAAc,QACdC,eAAe,eAO5B,EAlHGnC,CAAuByC,EAAAA,WAyJ7B","sources":["webpack:///./src/components/NewTag.js","webpack:///./src/templates/paginated-posts.js"],"sourcesContent":["/* eslint-disable react/prop-types */\nimport React from 'react';\nimport * as newTagStyles from './newtag.module.css';\n\nconst NewTag = ({ className, children }) => (\n  <span\n    className={`${newTagStyles.newtag} text-white rounded-md ${\n      className || 'px-2 py-1'\n    }`}\n  >\n    {children || 'NEW'}\n  </span>\n);\n\nexport default NewTag;\n","/* eslint-disable react/prop-types */\nimport { graphql, Link } from 'gatsby';\nimport React, { Component } from 'react';\nimport NewTag from '../components/NewTag';\nimport Layout from '../components/Layout';\n\nclass PaginatedPosts extends Component {\n  render() {\n    const { data } = this.props;\n    const { edges: posts, pageInfo } = data.allMdx;\n    const {\n      currentPage, hasNextPage, hasPreviousPage, pageCount,\n    } = pageInfo;\n\n    const previousUri = hasPreviousPage && currentPage !== 2 ? `/page/${currentPage - 1}` : '/';\n    const nextUri = hasNextPage\n      ? `/page/${currentPage + 1}`\n      : `/page/${currentPage}`;\n\n    return (\n      <Layout>\n        {/* Paginated Posts */}\n        {posts.map(({ node }) => (\n          <div\n            className=\"md:flex w-72 x:w-84 sm:w-100 md:w-120 mx-auto mt-8 rounded-lg bg-gray-lighter opacity-85 overflow-hidden\"\n            key={node.fields.slug}\n          >\n            <div className=\"w-full p-4 py-6 md:p-6\">\n              <div>\n                <div className=\"flex justify-between items-center\">\n                  <h5>\n                    <Link\n                      className=\"no-underline font-semibold text-black text-xl\"\n                      to={`/${node.fields.slug}`}\n                    >\n                      {node.frontmatter.title}\n                    </Link>\n                  </h5>\n                  {Date.now() - new Date(node.fields.date)\n                      < 24 * 3600 * 15 * 1000 && (\n                      <NewTag className=\"px-2 py-1 text-xs\" />\n                  )}\n                </div>\n                <p className=\"mt-2 text-gray-darkest text-sm x:text-base md:text-sm\">\n                  {node.frontmatter.description}\n                </p>\n              </div>\n              <div className=\"flex justify-between items-center mt-6\">\n                <span className=\"text-purple-light font-bold text-sm\">\n                  {node.fields.date}\n                </span>\n                <Link\n                  className=\"inline-block bg-purple-light rounded text-gray-lighter text-xs x:text-sm px-2 py-1 text-center no-underline\"\n                  to={`/${node.fields.slug}`}\n                >\n                  Read More\n                </Link>\n              </div>\n            </div>\n          </div>\n        ))}\n        <div className=\"flex justify-center w-72 x:w-84 sm:w-100 h-8 mt-12 mx-auto\">\n          {/* Previous Button */}\n          <Link\n            className=\"inline-flex justify-center items-center w-8 h-8 rounded-full bg-gray-lighter opacity-85\"\n            to={previousUri}\n            aria-label=\"Previous\"\n          >\n            <svg\n              width=\"6\"\n              height=\"10\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M5 1L1 5l4 4\"\n                stroke=\"#000\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              />\n            </svg>\n          </Link>\n          <div className=\"flex justify-center items-center mx-4 px-4 rounded-full bg-gray-lighter opacity-85\">\n            {Array.from({ length: pageCount }).map((_, i) => (\n              <Link\n                to={i === 0 ? '/' : `/page/${i + 1}`}\n                className={`inline-flex w-6 h-6 mr-2 text-sm x:text-base justify-center items-center no-underline rounded-full ${\n                  currentPage === i + 1\n                    ? 'bg-purple-light text-white'\n                    : 'text-black'\n                }`}\n                key={i}\n              >\n                {i + 1}\n              </Link>\n            ))}\n          </div>\n          {/* Next Button */}\n          <Link\n            className=\"inline-flex justify-center items-center w-8 h-8 rounded-full bg-gray-lighter opacity-85 text-black no-underline\"\n            aria-label=\"Next\"\n            to={nextUri}\n          >\n            <svg\n              width=\"6\"\n              height=\"10\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M1 9l4-4-4-4\"\n                stroke=\"#000\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              />\n            </svg>\n          </Link>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport const PaginatedPostsQuery = graphql`\n  query paginatedPostsQuery($skip: Int!, $limit: Int!) {\n    allMdx(\n      sort: { fields: fields___date, order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          frontmatter {\n            title\n            description\n            featuredImage {\n              childImageSharp {\n                fluid(maxWidth: 2000) {\n                  ...GatsbyImageSharpFluid_withWebp_noBase64\n                }\n              }\n            }\n          }\n        }\n      }\n      pageInfo {\n        currentPage\n        hasNextPage\n        hasPreviousPage\n        pageCount\n      }\n    }\n  }\n`;\n\nexport default PaginatedPosts;\n"],"names":["className","children","newTagStyles","PaginatedPosts","render","this","props","data","allMdx","posts","edges","pageInfo","currentPage","hasNextPage","hasPreviousPage","pageCount","previousUri","nextUri","map","node","key","fields","slug","Link","to","frontmatter","title","Date","now","date","description","width","height","fill","xmlns","d","stroke","strokeLinecap","strokeLinejoin","Array","from","length","_","i","Component"],"sourceRoot":""}